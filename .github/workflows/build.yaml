# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: nix build
on:
  workflow_run:
    workflows:
      - "nix flake check"
    types:
      - completed
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - host: blkmrkt
            os: macos-latest
            config_type: darwinConfigurations
          # - host: c889f3b8f7d7
          #   os: macos-latest
          #   config_type: darwinConfigurations
          - host: lronden-m-vy79p
            os: macos-latest
            config_type: darwinConfigurations
          - host: salus
            os: macos-latest
            config_type: darwinConfigurations
          - host: rucaslab
            os: ubuntu-latest
            config_type: nixosConfigurations
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
          fetch-depth: 1
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          logger: pretty
      - name: Install git-crypt
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update && sudo apt-get install -y git-crypt
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew install git-crypt
          fi
      - name: Decrypt secrets
        run: |
          echo "${{ secrets.GIT_CRYPT_KEY }}" | base64 -d > /tmp/git-crypt-key
          git-crypt unlock /tmp/git-crypt-key
          rm /tmp/git-crypt-key
      - name: Setup agenix key
        if: matrix.config_type == 'nixosConfigurations'
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AGENIX_KEY }}" > ~/.ssh/agenix
          chmod 600 ~/.ssh/agenix
      - uses: cachix/cachix-action@v15
        with:
          name: derpfiles
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Build ${{ matrix.host }}
        run: nix build .#${{ matrix.config_type }}.${{ matrix.host }}.config.system.build.toplevel
